---

- name: Verify
  hosts: users
  gather_facts: false
  become: true
  tasks:

  - name: Assert that user_01 as been created
    become_user: user_01
    ping:

  - name: Assert that user_02 as been created
    become_user: user_02
    ping:

  - name: Assert that user_06 as been created
    become_user: user_06
    ping:

  - name: Assert that user_07 as been created
    become_user: user_07
    ping:

  - name: Get user_01 data
    user:
      name: user_01
    register: user_01_data

  - name: Get user_02 data
    user:
      name: user_02
    register: user_02_data

  # user_01_data:
  #   append: false
  #   changed: false
  #   comment: ''
  #   failed: false
  #   group: 1000
  #   home: /home/my-user
  #   move_home: false
  #   name: my-user
  #   shell: /bin/zsh
  #   state: present
  #   uid: 322

  - name: Get user_01 group data
    group:
      name: "user_01"
    register: user_01_group_data

  # user_01_group_data:
  #   changed: true
  #   failed: false
  #   gid: 1013
  #   name: my-group
  #   state: present
  #   system: false

  - name: Assert that uid and gid is the same for simple users
    assert:
      that: user_01_data.uid == user_01_group_data.gid

  - name: Assert that group and user has same name for simple users
    assert:
      that: user_01_data.name == user_01_group_data.name

  - name: Assert that specified uid is set
    assert:
      that: user_02_data.uid == 1012

  - name: Assert that specified shell is set
    assert:
      that: user_02_data.shell == '/bin/zsh'

  - name: Assert that specified home is set
    assert:
      that: user_02_data.home == '/usr/local/user_02'

  - name: Stat common_profile for user with path_add
    stat:
      path: /usr/local/user_02/.common_profile
    register: user_02_common_profile

  - name: Assert that common_profile is added for user with path_add and custom home location
    assert:
      that: user_02_common_profile.stat.exists

  # Must specify shell again otherwise will default to /bin/bash
  - name: Add a new path for user_02
    include_role:
      name: user
    vars:
      user_name: user_02
      user_shell: /bin/zsh
      user_path_add: ['/user_02_test', '/opt']
      user_umask: '0027'

  - name: Check if new path /opt is in common_profile
    lineinfile:
      regex: "^export PATH=/opt:$PATH$"
      line: "export PATH=/opt:$PATH"
      dest: /usr/local/user_02/.common_profile
      state: present
    register: user_02_common_profile_content

  - name: Assert that new path /opt is in common_profile
    assert:
      that: not user_02_common_profile_content.changed

  - name: Get user_02 PATH
    become_user: user_02
    become_method: su
    become_flags: '-s /bin/zsh -l'
    shell:
      cmd: echo $PATH
    register: user_02_path
    changed_when: false

  - name: Assert that user_02 has /user_02_test in its PATH using zsh
    assert:
      that: user_02_path.stdout_lines is search('/user_02_test')

  - name: Get user_03 PATH
    become_user: user_03
    become_method: su
    become_flags: '-s /bin/bash -l'
    shell:
      cmd: echo $PATH
    register: user_03_path
    changed_when: false

  - name: Assert that user_03 has /user_03_test in its PATH using bash
    assert:
      that: user_03_path.stdout_lines is search('/user_03_test')

  - name: Empty user_path_add for user_03
    include_role:
      name: user
    vars:
      user_name: user_03
      user_shell: /bin/bash

  - name: Check that added path is removed from .common_profile for user_03
    lineinfile:
      regex: "^export PATH=/user_03_test:$PATH$"
      dest: /home/user_03/.common_profile
      state: absent
    register: user_03_common_profile_emptied
    changed_when: false

  - name: Assert that user_path_add is removed from .common_profile for user_03
    assert:
      that: not user_03_common_profile_emptied.changed

  - name: Get user_04 PATH
    become_user: user_04
    become_method: su
    become_flags: '-s /bin/bash -l'
    shell:
      cmd: echo $PATH
    register: user_04_path
    changed_when: false

  - name: Assert that user_04 path as been overwritten
    assert:
      that: user_04_path.stdout == '/usr/bin:/user_04_test'

  - name: Check that user_02 has the correct user_authorized_keys content
    copy:
      content: |
        ssh-rsa AAAAB1234 user1@example.com
        ssh-ed25519 AAAAB5678 user2@example.com
      dest: /usr/local/user_02/.ssh/authorized_keys
    register: user_02_authorized_keys_content

  - name: Assert that user_02 has the correct authorized_keys content
    assert:
      that: not user_02_authorized_keys_content.changed

  - name: Delete a keys from user_02 user_authorized_keys
    include_role:
      name: user
    vars:
      user_name: user_02
      user_shell: /bin/zsh
      user_uid: 1012
      user_home: /usr/local/user_02
      user_path_add: ['/user_02_test']
      user_authorized_keys:
        exclusive: 'True'
        keys_list:
          - comment: 'user1@example.com'
            ssh_key: 'ssh-rsa AAAAB1234'
      user_umask: '0027'
    register: test1

  - name: Check that user_02 2nd key has been deleted from user_authorized_keys
    copy:
      content: |
        ssh-rsa AAAAB1234 user1@example.com
      dest: /usr/local/user_02/.ssh/authorized_keys
    register: user_02_authorized_keys_deleted

  - name: Assert that user_02 2nd key has been deleted from user_authorized_keys
    assert:
      that: not user_02_authorized_keys_deleted.changed

  - name: Get user_05 gid
    ansible.builtin.getent:
      database: passwd
      key: user_05
    register: user_05_data

  - name: Assert that user_05 uid == gid
    assert:
      that: user_05_data.ansible_facts.getent_passwd.user_05[2] == '344'

  - name: Change user_05 uid from 344 to 388
    include_role:
      name: user
    vars:
      user_name: user_05
      user_uid: 388

  - name: Get user_05 home dir uid and gid
    file:
      path: /home/user_05
      state: directory
    register: user_05_uid_388

  - name: Assert that user_05 home dir group matchs user gid
    assert:
      that: user_05_uid_388.gid == 388
      fail_msg: "folder group should be 388, not {{ user_05_uid_388.gid }}"

  - name: Get user_01 umask
    become_user: user_01
    become_flags: -i
    ansible.builtin.command:
      cmd: umask
    register: user_01_umask
    changed_when: false

  - name: Assert that user_01 umask is 0026 on BASH
    ansible.builtin.assert:
      that: user_01_umask.stdout == '0026'

  - name: Get user_02 umask
    become_user: user_02
    become_flags: -i
    ansible.builtin.command:
      cmd: umask
    register: user_02_umask
    changed_when: false

  - name: Assert that user_02 umask is 0027 on ZSH
    ansible.builtin.assert:
      that: user_02_umask.stdout == '0027'
