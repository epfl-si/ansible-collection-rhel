---

- name: Verify
  hosts: user1
  gather_facts: false
  tasks:

  - name: Assert that user_01 as been created
    become: true
    become_user: user_01
    ping:

  - name: Assert that user_02 as been created
    become: true
    become_user: user_02
    ping:

  - name: Get user_01 data
    user:
      name: user_01
    register: user_01_data

  - name: Get user_02 data
    user:
      name: user_02
    register: user_02_data

  # user_01_data:
  #   append: false
  #   changed: false
  #   comment: ''
  #   failed: false
  #   group: 1000
  #   home: /home/my-user
  #   move_home: false
  #   name: my-user
  #   shell: /bin/zsh
  #   state: present
  #   uid: 322

  - name: Get user_01 group data
    group:
      name: "user_01"
    register: user_01_group_data

  # user_01_group_data:
  #   changed: true
  #   failed: false
  #   gid: 1013
  #   name: my-group
  #   state: present
  #   system: false

  - name: Assert that uid and gid is the same for simple users
    assert:
      that: user_01_data.uid == user_01_group_data.gid

  - name: Assert that group and user has same name for simple users
    assert:
      that: user_01_data.name == user_01_group_data.name

  - name: Assert that specified uid is set
    assert:
      that: user_02_data.uid == 1012

  - name: Assert that specified shell is set
    assert:
      that: user_02_data.shell == '/bin/zsh'

  - name: Assert that specified home is set
    assert:
      that: user_02_data.home == '/usr/local/user_02'

  - name: Stat common_profile for simple user
    stat:
      path: /home/user_01/.common_profile
    register: user_01_common_profile

  - name: Assert that no common_profile is added for simple user
    assert:
      that: not user_01_common_profile.stat.exists

  - name: Stat common_profile for user with path_add
    stat:
      path: /usr/local/user_02/.common_profile
    register: user_02_common_profile

  - name: Assert that no common_profile is added for user with path_add
    assert:
      that: user_02_common_profile.stat.exists

  # Must specify shell again otherwise will default to /bin/bash
  - name: Add a new path for user_02
    include_role:
      name: user
    vars:
      username: user_02
      shell: /bin/zsh
      user_path_add: ['/user_02_test', '/opt']

  - name: Check if new path /opt is in common_profile
    lineinfile:
      regex: "^export PATH=/opt:$PATH$"
      line: "export PATH=/opt:$PATH"
      dest: /usr/local/user_02/.common_profile
      state: present
    register: user_02_common_profile_content

  - name: Assert that new path /opt is in common_profile
    assert:
      that: not user_02_common_profile_content.changed

  - name: Get user_02 PATH
    become: true
    become_user: user_02
    become_method: su
    become_flags: '-s /bin/zsh -l'
    shell:
      cmd: echo $PATH
    register: user_02_path
    changed_when: false

  - name: Assert that user_02 has /user_02_test in its PATH using zsh
    assert:
      that: "user_02_path.stdout_lines is search('/user_02_test')"

  - name: Get user_03 PATH
    become: true
    become_user: user_03
    become_method: su
    become_flags: '-s /bin/bash -l'
    shell:
      cmd: echo $PATH
    register: user_03_path
    changed_when: false

  - name: Assert that user_03 has /user_03_test in its PATH using bash
    assert:
      that: "user_03_path.stdout_lines is search('/user_03_test')"

  - name: Empty user_path_add for user_03
    include_role:
      name: user
    vars:
      username: user_03
      shell: /bin/bash

  - name: Check that .common_profile is removed for user_03
    become: true
    stat:
      path: /home/user_03/.common_profile
    register: user_03_common_profile_emptied
    changed_when: false

  - name: Assert that .common_profile is removed for user_03
    assert:
      that: not user_03_common_profile_emptied.stat.exists
