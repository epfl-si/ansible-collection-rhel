---
# tasks file for user

- name: Assert that {{ user_name }} user_path_add and user_path are not both set
  ansible.builtin.assert:
    that: >
      not (
        user_path_add | default('') | length > 0
        and user_path | default('') | length > 0
      )
    fail_msg: user_path_add and user_path are mutually exclusive

- name: Create group to ensure gid is same as uid for uid < 1000
  ansible.builtin.group:
    name: "{{ user_name }}"
    gid:
      "{{ omit if ( user_uid | default(0) | int == 0 ) \
      else ( user_uid | int ) }}"
    state: present
    system:
      "{{ true if ( \
        (user_uid is defined) \
        and (user_uid | int <= 999) \
      ) else false }}"

- name: "Add {{ user_name }} user"
  ansible.builtin.user:
    name: "{{ user_name }}"
    group: "{{ user_name }}"
    state: present
    shell: "{{ user_shell }}"
    home:
      "{{ omit if ( user_home | default('') | length == 0 ) else user_home }}"
    uid:
      "{{ omit if ( user_uid | default(0) | int == 0 ) \
      else ( user_uid | int ) }}"
  register: user_creation_status

- name: Fix {{ user_name }} home group owner in case the uid changed
  ansible.builtin.file:
    path: "{{ user_creation_status.home }}"
    group: "{{ user_creation_status.group }}"
    recurse: true
    state: directory
  when:
    - user_name != 'root'
    - user_creation_status.changed

- name: Include task to get {{ user_name }} info
  ansible.builtin.include_tasks: get_user_info.yml
  when: not ansible_check_mode

- name: Include tasks to manage {{ user_name }}'s bash
  include_tasks: bash.yml
  when:
    - user_shell == '/bin/bash'
    - not ansible_check_mode

- name: Include tasks to manage {{ user_name }}'s zsh
  ansible.builtin.include_tasks: zsh.yml
  when:
    - user_shell == '/bin/zsh'
    - not ansible_check_mode

- name: Include tasks to manage {{ user_name }}'s common profile
  ansible.builtin.include_tasks: common_profile.yml

- name: Include tasks to manager {{ user_name }}'s authorized keys
  ansible.builtin.import_tasks: authorized_keys.yml
  when:
    - user_authorized_keys is defined
    - not ansible_check_mode or not user_creation_status.changed
