---
# tasks file for user

- name: Set variables defaults to avoid testing if variables are defined
  set_fact:
    __user_path_add: "{{ user_path_add | default([]) }}"
    __user_path: "{{ user_path | default('') }}"
    __user_shell: "{{ user_shell | default('/bin/bash') }}"
    __user_uid: "{{ user_uid | default(0) }}"
    __user_home: "{{ user_home | default('') }}"
    __user_authorized_keys: "{{ user_authorized_keys | default({}) }}"

- name: Assert that {{ user_name }} user_path_add and user_path are not both set
  assert:
    that: not ( __user_path_add | length > 0 and __user_path | length > 0 )
    fail_msg: __user_path_add and __user_path are mutually exclusive

- name: Create group to ensure gid is same as uid for uid < 1000
  become: true
  ansible.builtin.group:
    name: "{{ user_name }}"
    gid: "{{ omit if ( __user_uid | int == 0 ) else ( __user_uid | int ) }}"
    state: present

- name: "Add {{ user_name }} user"
  become: true
  ansible.builtin.user:
    name: "{{ user_name }}"
    group: "{{ user_name }}"
    state: present
    shell: "{{ __user_shell }}"
    home: "{{ omit if (__user_home | length == 0) else __user_home }}"
    uid: "{{ omit if ( __user_uid | int == 0 ) else ( __user_uid | int ) }}"
  register: user_creation_status

- name: Fix {{ user_name }} home group owner in case the uid changed
  become: true
  ansible.builtin.file:
    path: "{{ user_creation_status.home }}"
    group: "{{ user_creation_status.group }}"
    recurse: true
    state: directory
  when:
    - user_name != 'root'
    - user_creation_status.changed

- name: Include task to get {{ user_name }} info
  include_tasks: get_user_info.yml
  when: not ansible_check_mode or not user_creation_status.changed

- name: Include tasks to manage {{ user_name }}'s bash
  include_tasks: bash.yml
  when:
    - __user_shell == '/bin/bash'
    - not ansible_check_mode or not user_creation_status.changed

- name: Include tasks to manage {{ user_name }}'s zsh
  include_tasks: zsh.yml
  when:
    - __user_shell == '/bin/zsh'
    - not ansible_check_mode or not user_creation_status.changed

- name: Include tasks to manage {{ user_name }}'s common profile
  include_tasks: common_profile.yml

- name: Include tasks to manager {{ user_name }}'s authorized keys
  import_tasks: authorized_keys.yml
  when:
    - __user_authorized_keys.keys_list is defined
    - not ansible_check_mode or not user_creation_status.changed

- name: Reset variables in case the role is called multiple times
  set_fact:
    __user_path_add: []
    __user_path: ''
    __user_uid: 0
    __user_home: ''
    __user_authorized_keys: {}
