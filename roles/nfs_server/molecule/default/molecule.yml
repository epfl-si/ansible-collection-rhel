---

scenario:
  name: default

driver:
  options:
    managed: false
    login_cmd_template: "podman exec -ti {instance} bash"
    ansible_connection_options:
      ansible_connection: podman

dependency:
  name: galaxy
  options:
    requirements-file: molecule/default/requirements.yml

# To access DBUS we must disable selinux labels
platforms:

  - name: nfs_server_el8
    registry: &registry {url: registry.access.redhat.com}
    image: ubi8/ubi-init
    tmpfs: &tmpfs ['/run', '/tmp']
    privileged: &privileged true
    volumes:
      - '/sys/fs/cgroup:/sys/fs/cgroup:ro'
      - ${MOLECULE_SCENARIO_DIRECTORY}/share_el8:/var/nfs/nfs_server
    command: &command "/usr/sbin/init"
    security_opts: &security_opts ['label=disable']

  # We need a RHEL9 worker for this to work
  # - name: nfs_server_el9
  #   registry: *registry
  #   image: ubi9/ubi-init
  #   tmpfs: *tmpfs
  #   privileged: *privileged
  #   volumes:
  #     - '/sys/fs/cgroup:/sys/fs/cgroup:ro'
  #     - ${MOLECULE_SCENARIO_DIRECTORY}/share_el9:/var/nfs/nfs_server
  #   command: *command
  #   security_opts: *security_opts

provisioner:
  name: ansible
  log: true
  config_options:
    defaults:
      interpreter_python: auto_silent
  playbooks:
    create: ../../../../molecule/resources/playbooks/create.yml
    create-fail: ../../../../molecule/resources/playbooks/create-fail.yml
    destroy: ../../../../molecule/resources/playbooks/destroy.yml

verifier:
  name: ansible
