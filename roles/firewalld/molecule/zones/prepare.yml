---

- name: Prepare
  hosts: zones
  gather_facts: false
  vars:
    ansible_user: root
  module_defaults:
    file:
      owner: root
      group: root
      mode: '0700'
    copy:
      owner: root
      group: root
      mode: '0600'
  tasks:

    # In ubi8 we are always root. This doesn't reflect a real world
    # scenario when ssh connections to root are forbidden. To help
    # us see when a task need the become directive, we will connect
    # to this unprivileged user.
    - name: Create ansible user
      become: true
      ansible.builtin.user:
        name: cmadm
        state: present

    - name: Allow ansible to sudo without password
      become: true
      ansible.builtin.copy:
        content: "cmadm ALL=(ALL) NOPASSWD: ALL"
        dest: /etc/sudoers.d/10-cmadm
        validate: /usr/sbin/visudo -csf %s
        owner: root
        group: root
        mode: '0644'

    # iproute provides commands: ip, route, ss, ...
    # iputils provides commands: ping, arping, tracepath, ...
    - name: Install ip packages for debugging
      yum:
        name:
          - iproute
          - iputils
        state: present

    - name: Prepare ssh keys on zone2
      when: inventory_hostname == "zone2"
      block:

        - name: Zone2 - Ensure .ssh folder exists
          file:
            path: /root/.ssh
            state: directory

        - name: Zone2 - Install Openssh to provide ssh-keygen command
          yum:
            name: openssh
            state: present

        - name: Zone2 - Create ssh keys pair
          openssh_keypair:
            type: ed25519
            path: /root/.ssh/id_ed25519
            owner: root
            comment: root@zone2

        - name: Zone2 - Get public key
          slurp:
            src: /root/.ssh/id_ed25519.pub
          register: zone2_pub_key

    - name: Prepare zone1
      when: inventory_hostname == "zone1"
      block:

        - name: Zone1 - Paste zone2's public key in authorized_key file
          authorized_key:
            user: root
            state: present
            manage_dir: true
            key: "{{ hostvars['zone2'].zone2_pub_key['content'] | b64decode }}"

        - name: Zone1 - Install servers packages
          yum:
            name:
              - openssh-server
              - xinetd
            state: present

        - name: Zone1 - Ensure SSHD server service is running
          service:
            daemon_reload: true
            enabled: true
            name: sshd.service
            state: started

        - name: Zone1 - Configure xinetd for port 3306
          copy:
            content: |
              service mysqld
              {
                id          = fake-mysqld
                type        = UNLISTED
                wait        = no
                socket_type = stream
                protocol    = tcp
                port        = 3306
                user        = root
                server      = /usr/sbin/sshd
              }
            dest: /etc/xinetd.d/mysqld

        # Use sshd as a fake server since we installed it earlier
        - name: Zone1 - Configure xinetd for port 33001
          copy:
            content: |
              service mysqld
              {
                id          = fake-mysqld1
                type        = UNLISTED
                wait        = no
                socket_type = stream
                protocol    = tcp
                port        = 33001
                user        = root
                server      = /usr/sbin/sshd
              }
            dest: /etc/xinetd.d/mysqld1

        - name: Zone1 - Configure xinetd for port 33002
          copy:
            content: |
              service mysqld
              {
                id          = fake-mysqld2
                type        = UNLISTED
                wait        = no
                socket_type = stream
                protocol    = tcp
                port        = 33002
                user        = root
                server      = /usr/sbin/sshd
              }
            dest: /etc/xinetd.d/mysqld2

        - name: Zone1 - Enable xinetd
          systemd:
            name: xinetd
            state: restarted
            enabled: true
