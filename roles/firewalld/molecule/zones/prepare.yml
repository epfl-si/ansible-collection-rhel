---
- name: Prepare
  hosts: molecule
  gather_facts: false
  module_defaults:
    file:
      owner: root
      group: root
      mode: '0700'
    copy:
      owner: root
      group: root
      mode: '0600'
  tasks:

    # iproute provides commands: ip, route, ss, ...
    # iputils provides commands: ping, arping, tracepath, ...
    - name: Prepare - Install packages
      ansible.builtin.package:
        name:
          - sudo     # For become and /etc/sudoers.d
          - iproute  # For debugging
          - iputils  # For debugging
          - openssh  # For ssh-keygen command
          - openssh-server
        state: present

    - name: Prepare - Unmask systemd-logind.service
      ansible.builtin.systemd:
        name: systemd-logind.service
        masked: false

    - name: Prepare - Ensure .ssh folder exists
      ansible.builtin.file:
        path: /root/.ssh
        state: directory
        owner: root
        group: root
        mode: '0700'

    - name: Prepare - Prepare ssh keys on zone2
      when: inventory_hostname == "zone2"
      block:

        - name: Prepare - Zone2 - Create ssh keys pair
          ansible.builtin.copy:
            content: |
              -----BEGIN OPENSSH PRIVATE KEY-----
              b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAAAMwAAAAtzc2gtZW
              QyNTUxOQAAACD+pmOaGiWWwTMugyYgGbHVQG2WmakL87Z7ZyKTdXaKcAAAAJiS891KkvPd
              SgAAAAtzc2gtZWQyNTUxOQAAACD+pmOaGiWWwTMugyYgGbHVQG2WmakL87Z7ZyKTdXaKcA
              AAAEAWJj+uZk1IgGsjSprqgU6dQeR9Xe6kSijbp2YxkbyDUf6mY5oaJZbBMy6DJiAZsdVA
              bZaZqQvztntnIpN1dopwAAAAEGhvbmlpeEBwYW5nb2xpbjEBAgMEBQ==
              -----END OPENSSH PRIVATE KEY-----
            dest: /root/.ssh/id_ed25519
            owner: root
            group: root
            mode: '0400'

    - name: Prepare zone1
      when: inventory_hostname == "zone1"
      block:

        - name: Prepare - Zone1 - Paste zone2's public key in authorized_key file
          ansible.builtin.copy:
            content: |
              ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIP6mY5oaJZbBMy6DJiAZsdVAbZaZqQvztntnIpN1dopw zone2
            dest: /root/.ssh/authorized_keys
            owner: root
            group: root
            mode: '0400'

        - name: Prepare - Zone1 - Configure systemd socket for 3306
          ansible.builtin.copy:
            content: |
              [Unit]
              Description=Fake MySQLD Socket

              [Socket]
              ListenStream=3306
              Accept=yes

              [Install]
              WantedBy=sockets.target
            dest: /etc/systemd/system/mysqld0.socket
            owner: root
            group: root
            mode: '0700'

        - name: Prepare - Zone1 - Configure systemd socket for 33001
          ansible.builtin.copy:
            content: |
              [Unit]
              Description=Fake MySQLD Socket 33001

              [Socket]
              ListenStream=33001
              Accept=yes

              [Install]
              WantedBy=sockets.target
            dest: /etc/systemd/system/mysqld1.socket
            owner: root
            group: root
            mode: '0700'

        - name: Prepare - Zone1 - Configure systemd socket for 33002
          ansible.builtin.copy:
            content: |
              [Unit]
              Description=Fake MySQLD Socket 33002

              [Socket]
              ListenStream=33002
              Accept=yes

              [Install]
              WantedBy=sockets.target
            dest: /etc/systemd/system/mysqld2.socket
            owner: root
            group: root
            mode: '0700'

        # Use sshd as a fake server since we installed it earlier
        - name: Prepare - Zone1 - Configure systemd service fake MariaDB 3306
          ansible.builtin.copy:
            content: |
              [Unit]
              Description=Fake MySQLD 3306

              [Service]
              ExecStart=-/usr/sbin/sshd    # the binary to start
              User=root
              Group=root
              StandardInput=socket
            owner: root
            group: root
            mode: '0700'
            dest: /etc/systemd/system/mysqld0@.service

        - name: Prepare - Zone1 - Configure systemd service fake MariaDB 33001
          ansible.builtin.copy:
            content: |
              [Unit]
              Description=Fake MySQLD 33001

              [Service]
              ExecStart=-/usr/sbin/sshd    # the binary to start
              User=root
              Group=root
              StandardInput=socket
            owner: root
            group: root
            mode: '0700'
            dest: /etc/systemd/system/mysqld1@.service

        - name: Prepare - Zone1 - Configure systemd service fake MariaDB 33002
          ansible.builtin.copy:
            content: |
              [Unit]
              Description=Fake MySQLD 33002

              [Service]
              ExecStart=-/usr/sbin/sshd    # the binary to start
              User=root
              Group=root
              StandardInput=socket
            owner: root
            group: root
            mode: '0700'
            dest: /etc/systemd/system/mysqld2@.service

        - name: Prepare - Zone1 - Enable and start all fakes MySQLd
          ansible.builtin.systemd:
            daemon_reload: true
            name: "{{ item }}"
            state: started
            enabled: true
          loop:
            - sshd.service
            - mysqld0.socket
            - mysqld1.socket
            - mysqld2.socket
