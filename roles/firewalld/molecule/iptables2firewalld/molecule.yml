---

scenario:
  name: iptables2firewalld

driver:
  options:
    managed: false
    login_cmd_template: "podman exec -ti {instance} bash"
    ansible_connection_options:
      ansible_connection: podman

dependency:
  name: galaxy
  options:
    requirements-file: molecule/iptables2firewalld/requirements.yml

# To access DBUS we must disable selinux labels
# NET_ADMIN capability is required to attach an IP and admin of firewall
# pre_build_image: means that the container already has Ansible inside
platforms:

  - name: iptables2firewalld1
    registry: &registry {url: registry.access.redhat.com}
    image: ubi8/ubi-init
    tmpfs: &tmpfs ['/run', '/tmp']
    volumes: &volumes ['/sys/fs/cgroup:/sys/fs/cgroup:ro']
    capabilities: &capabilities ['SYS_ADMIN', 'NET_ADMIN']
    command: &command "/usr/sbin/init"
    security_opts: &security_opts ['label=disable']

# - name: iptables2firewalld2
#   registry: *registry
#   image: ubi9/ubi-init
#   tmpfs: *tmpfs
#   volumes: *volumes
#   capabilities: *capabilities
#   command: *command
#   security_opts: *security_opts

provisioner:
  name: ansible
  log: true
  config_options:
    defaults:
      interpreter_python: auto_silent
  inventory:
    links:
      hosts: inv.yml
  playbooks:
    create: ../../../../molecule/resources/playbooks/create.yml
    create-fail: ../../../../molecule/resources/playbooks/create-fail.yml
    destroy: ../../../../molecule/resources/playbooks/destroy.yml

verifier:
  name: ansible
